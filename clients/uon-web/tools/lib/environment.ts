import assert from 'assert';
import fs from 'fs';
import { getBuildTimeConfig } from './getBuildTimeConfig';

const { writeFile } = fs.promises;

export const loadEnv = async (): Promise<void> => {
  assert(process.env.ENV, 'ENV is missing');

  const {
    ENV,
    GIT_SHA,
    PLATFORM_API_ORIGIN,
    PLATFORM_API_URL,
    UON_API_ORIGIN,
    UON_API_URL,
    LOGIN_EMAIL,
    LOGIN_PASSWORD,
  } = await getBuildTimeConfig({
    env: process.env.ENV,
  });

  console.log(`--- Loading ENV for ${process.env.ENV}`);

  const envMap = {
    NEXT_PUBLIC_ENV: ENV,
    NEXT_PUBLIC_GIT_SHA: GIT_SHA,
    NEXT_PUBLIC_PLATFORM_API_ORIGIN: PLATFORM_API_ORIGIN,
    NEXT_PUBLIC_PLATFORM_API_URL: PLATFORM_API_URL,
    NEXT_PUBLIC_UON_API_ORIGIN: UON_API_ORIGIN,
    NEXT_PUBLIC_UON_API_URL: UON_API_URL,
    NEXT_PUBLIC_LOGIN_EMAIL: LOGIN_EMAIL,
    NEXT_PUBLIC_LOGIN_PASSWORD: LOGIN_PASSWORD,
  };

  await writeFile(
    './.env',
    [
      '# Auto generated by tools/lib/environment.ts, DO NOT modify manually.\n',
      ...Object.entries(envMap)
        .filter(([_key, value]) => !!value)
        .map(([key, value]) => `${key}='${value}'`),
    ].join('\n'),
  );
};
